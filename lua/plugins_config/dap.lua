-- UNUSED JUST KEEP IT FOR FUTURE UPDATE
-- mxsdev/nvim-dap-vscode-js
---@diagnostic disable-next-line: missing-fields
-- require("dap-vscode-js").setup({
--   debugger_path = os.getenv("HOME") .. "/.local/share/nvim/lazy/vscode-js-debug",
--   adapters = {
--     "pwa-node",
--     "pwa-chrome",
--     "pwa-msedge",
--     "node-terminal",
--     "pwa-extensionHost",
--   },
--
--   -- Path for file logging
--   log_file_path = os.getenv("HOME") .. "/.config/nvim/logs/dap_vscode_js.log",
--
--   -- Logging level for output to file. Set to false to disable logging.
--   log_file_level = 1,
--
--   -- Logging level for output to console. Set to false to disable console output.
--   log_console_level = vim.log.levels.ERROR,
-- })
--
-- -- mfussenegger/nvim-dap
-- local dap = require("dap")
-- dap.adapters.node2 = {
--   type = "executable",
--   command = "node",
--   args = {
--     os.getenv("HOME") .. "/.local/share/nvim/lazy/vscode-node-debug/out/src/nodeDebug.js",
--   },
-- }
-- for _, language in ipairs({ "typescript", "javascript" }) do
--   dap.configurations[language] = {
--     {
--       type = "pwa-node",
--       request = "launch",
--       name = "Launch file",
--       program = "${file}",
--       cwd = "${workspaceFolder}",
--       sourceMap = true,
--     },
--     {
--       type = "pwa-node",
--       request = "attach",
--       name = "Attach",
--       processId = require("dap.utils").pick_process,
--       cwd = "${workspaceFolder}",
--       sourceMap = true,
--     },
--     {
--       type = "pwa-node",
--       request = "launch",
--       name = "Debug Jest Tests",
--       -- trace = true, -- include debugger info
--       runtimeExecutable = "node",
--       runtimeArgs = {
--         "./node_modules/jest/bin/jest.js",
--         "--runInBand",
--       },
--       rootPath = "${workspaceFolder}",
--       cwd = "${workspaceFolder}",
--       console = "integratedTerminal",
--       internalConsoleOptions = "neverOpen",
--       sourceMap = true,
--     },
--   }
-- end
-- -- require('dap').set_log_level('INFO')
-- dap.defaults.fallback.terminal_win_cmd = "20split new"
-- vim.fn.sign_define("DapBreakpoint", { text = "üü•", texthl = "", linehl = "", numhl = "" })
-- vim.fn.sign_define("DapBreakpointRejected", { text = "üü¶", texthl = "", linehl = "", numhl = "" })
-- vim.fn.sign_define("DapStopped", { text = "‚≠êÔ∏è", texthl = "", linehl = "", numhl = "" })
--
-- vim.keymap.set("n", "<leader>dh", function()
--   require("dap").toggle_breakpoint()
-- end)
-- vim.keymap.set("n", "<leader>dH", ":lua require'dap'.set_breakpoint(vim.fn.input('Breakpoint condition: '))<CR>")
-- vim.keymap.set({ "n", "t" }, "<A-k>", function()
--   require("dap").step_out()
-- end)
-- vim.keymap.set({ "n", "t" }, "<A-l>", function()
--   require("dap").step_into()
-- end)
-- vim.keymap.set({ "n", "t" }, "<A-j>", function()
--   require("dap").step_over()
-- end)
-- vim.keymap.set({ "n", "t" }, "<A-h>", function()
--   require("dap").continue()
-- end)
-- vim.keymap.set("n", "<leader>dn", function()
--   require("dap").run_to_cursor()
-- end)
-- vim.keymap.set("n", "<leader>dc", function()
--   require("dap").terminate()
-- end)
-- vim.keymap.set("n", "<leader>dR", function()
--   require("dap").clear_breakpoints()
-- end)
-- vim.keymap.set("n", "<leader>de", function()
--   require("dap").set_exception_breakpoints({ "all" })
-- end)
-- vim.keymap.set("n", "<leader>da", function()
--   require("debugHelper").attach()
-- end)
-- vim.keymap.set("n", "<leader>dA", function()
--   require("debugHelper").attachToRemote()
-- end)
-- vim.keymap.set("n", "<leader>di", function()
--   require("dap.ui.widgets").hover()
-- end)
-- vim.keymap.set("n", "<leader>d?", function()
--   local widgets = require("dap.ui.widgets")
--   widgets.centered_float(widgets.scopes)
-- end)
-- vim.keymap.set("n", "<leader>dk", ':lua require"dap".up()<CR>zz')
-- vim.keymap.set("n", "<leader>dj", ':lua require"dap".down()<CR>zz')
-- vim.keymap.set("n", "<leader>dr", ':lua require"dap".repl.toggle({}, "vsplit")<CR><C-w>l')
-- vim.keymap.set("n", "<leader>du", ':lua require"dapui".toggle()<CR>')
--
-- -- nvim-telescope/telescope-dap.nvim
-- require("telescope").load_extension("dap")
-- vim.keymap.set("n", "<leader>ds", ":Telescope dap frames<CR>")
-- -- vim.keymap.set('n', '<leader>dc', ':Telescope dap commands<CR>')
-- vim.keymap.set("n", "<leader>db", ":Telescope dap list_breakpoints<CR>")
--
-- require("nvim-dap-virtual-text").setup()
